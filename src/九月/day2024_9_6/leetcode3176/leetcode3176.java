package 九月.day2024_9_6.leetcode3176;

import java.util.HashMap;

public class leetcode3176 {
    public static int maximumLength(int[] nums, int k) {
        int max=0;
        HashMap<Long,Integer> memo=new HashMap<>();
        for(int i=0;i<nums.length;i++){
            int ans=maximumLengthhelper(nums,k,i,0,1,memo);
            max=Math.max(max,ans);
        }
        return max;
    }
    //以index开头的满足要求的子序列的最大长度是多少
    public static int maximumLengthhelper(int[] nums,int k,int index,int k2,int length,HashMap<Long,Integer> memo){
        if(k2>k || index>=nums.length){
            return length;
        }
        long label=(long)index<<30 | (long) k2 <<20 | (long) length <<10;
        if(memo.containsKey(label)){
            return memo.get(label);
        }
        int max=0;
        for(int i=index+1;i<nums.length;i++){
            //选择i元素
            int ans=0;
            if(nums[i]!=nums[index] && k2+1<=k){
                ans=maximumLengthhelper(nums,k,i,k2+1,length+1,memo);
            }else if(nums[i]==nums[index]){
                ans=maximumLengthhelper(nums,k,i,k2,length+1,memo);
            }
            max=Math.max(max,ans);
        }
        memo.put(label,max);
        return max==0?length:max;
    }

    public static void main(String[] args) {
        int[] nums={100000018,100000065,100000027,100000048,100000060,100000006,100000011,100000063,100000087,100000035,100000034,100000018,100000094,100000045,100000070,100000053,100000045,100000075,100000037,100000052,100000088,100000016,100000087,100000004,100000003,100000068,100000096,100000085,100000031,100000033,100000049,100000090,100000100,100000019,100000085,100000007,100000065,100000001,100000062,100000004,100000040,100000073,100000087,100000059,100000004,100000030,100000092,100000066,100000053,100000040,100000094,100000081,100000030,100000066,100000061,100000058,100000087,100000097,100000015,100000025,100000031,100000002,100000028,100000020,100000076,100000098,100000079,100000046,100000048,100000002,100000095,100000061,100000063,100000004,100000056,100000065,100000027,100000061,100000048,100000015,100000026,100000008,100000029,100000041,100000021,100000006,100000006,100000016,100000027,100000043,100000046,100000047,100000051,100000026,100000047,100000008,100000016,100000047,100000002,100000019,100000029,100000056,100000085,100000006,100000088,100000034,100000059,100000017,100000064,100000000,100000049,100000095,100000016,100000088,100000013,100000093,100000071,100000045,100000004,100000013,100000025,100000099,100000079,100000066,100000050,100000048,100000026,100000057,100000014,100000089,100000004,100000024,100000095,100000045,100000010,100000072,100000080,100000001,100000008,100000061,100000047,100000079,100000078,100000080,100000032,100000077,100000096,100000079,100000097,100000032,100000072,100000082,100000094,100000043,100000007,100000100,100000024,100000091,100000030,100000067,100000008,100000001,100000071,100000006,100000043,100000060,100000091,100000098,100000090,100000065,100000016,100000085,100000099,100000085,100000067,100000011,100000046,100000016,100000049,100000038,100000100,100000020,100000030,100000008,100000062,100000061,100000027,100000043,100000033,100000009,100000021,100000080,100000066,100000025,100000051,100000054,100000033,100000018,100000028,100000027,100000016,100000014,100000072,100000006,100000095,100000056,100000069,100000034,100000014,100000098,100000028,100000079,100000037,100000063,100000036,100000013,100000010,100000014,100000056,100000076,100000035,100000004,100000020,100000036,100000005,100000015,100000086,100000000,100000048,100000064,100000054,100000057,100000049,100000092,100000068,100000068,100000086,100000034,100000095,100000098,100000005,100000100,100000084,100000023,100000052,100000043,100000052,100000015,100000048,100000005,100000009,100000069,100000056,100000083,100000058,100000050,100000093,100000084,100000044,100000100,100000007,100000002,100000088,100000043,100000037,100000086,100000073,100000018,100000068,100000058,100000093,100000028,100000086,100000077,100000033,100000020,100000000,100000033,100000052,100000059,100000044,100000090,100000075,100000040,100000078,100000098,100000020,100000004,100000056,100000098,100000022,100000059,100000036,100000039,100000004,100000087,100000049,100000050,100000019,100000057,100000053,100000015,100000022,100000062,100000014,100000051,100000037,100000083,100000069,100000004,100000090,100000096,100000020,100000048,100000030,100000039,100000053,100000025,100000058,100000036,100000022,100000092,100000029,100000023,100000005,100000073,100000041,100000010,100000096,100000068,100000004,100000068,100000052,100000014,100000043,100000073,100000080,100000042,100000075,100000071,100000030,100000084,100000089,100000097,100000011,100000052,100000069,100000055,100000068,100000064,100000030,100000005,100000055,100000074,100000075,100000074,100000094,100000092,100000040,100000003,100000089,100000035,100000061,100000077,100000023,100000013,100000022,100000029,100000059,100000011,100000065,100000082,100000091,100000030,100000093,100000097,100000019,100000000,100000023,100000092,100000094,100000003,100000064,100000037,100000009,100000032,100000070,100000052,100000017,100000098,100000072,100000065,100000078,100000090,100000061,100000070,100000014,100000060,100000078,100000068,100000096,100000025,100000037,100000055,100000097,100000071,100000064,100000065,100000030,100000060,100000021,100000031,100000018,100000084,100000059,100000100,100000085,100000086,100000053,100000057,100000084,100000050,100000034,100000054,100000070,100000061,100000095,100000056,100000050,100000002,100000025,100000034,100000007,100000087,100000091,100000065,100000010,100000066,100000047,100000053,100000098,100000091,100000060,100000057,100000084,100000011,100000043,100000029,100000052,100000055,100000037,100000038,100000076,100000094,100000086,100000085,100000038,100000038,100000099,100000063,100000054,100000070,100000063,100000036,100000067,100000000,100000049,100000055,100000076,100000084,100000052,100000075,100000023,100000015,100000054,100000095,100000017,100000082,100000040,100000051,100000032,100000047,100000016,100000063,100000021,100000079,100000034,100000003,100000019,100000055,100000042,100000004,100000080,100000053,100000041,100000032,100000065,100000001,100000063,100000015};
        int k=23;
//        int ans=maximumLength(nums,k);
        int ans2=leetcode3176_2.maximumLength(nums,k);
//        System.out.println(ans);
        System.out.println(ans2);
        int ans3=leetcode3176_3.maximumLength(nums,k);
        System.out.println("ppp");
        System.out.println(ans3);
    }
}
